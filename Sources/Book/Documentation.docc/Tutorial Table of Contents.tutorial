@Tutorials(name: "Как начать писать автотесты") {
    @Intro(title: "Как начать писать автотесты") {
        Тесты важны и для ускорения разработки приложения и для повышения надежности. Увы, сделать код тестируемым — особенная задача и вам нужно будет научиться новым фреймворкам, новым подходам по работе с кодом и т.п.
        
<!--        @Image(source: <#file#>, alt: "<#accessible description#>")-->
    }
    
    @Chapter(name: "Простые тесты") {
        1. TDD-каты
        
        @Image(source: SimpleTesting, alt: "Хмурый мужчина радуется после того как прошли тесты")        
        @TutorialReference(tutorial: "doc:tutorials/Network")
    }
    
    @Chapter(name: "Зависимости") {
        Самая сложная задача тестирования — получить контроль над всеми зависимостями. 
        
        1. <doc:DependenciesBasic>
        1. <doc:Network> 
        1. <doc:PreviewPrefire>
        1. Вьюмодель как конечное представление. Тестирование состояния через spy. 
        1. <doc:Navigation>

        @Image(source: Dependencies, alt: "Хмурый мужчина не может запустить тесты из-за сложных зависимостей")   
        
        @TutorialReference(tutorial: "doc:tutorials/Network")
    }
    
    @Chapter(name: "TDD в реальном приложении") {
       1. Превью, вьюшка, стабы, скриншот-тест
       1. Пишем с реальной сетью, отделяем зависимости, стабаем. 
       
       @Image(source: TDD-cycle, alt: "Хмурый мужчина не может запустить тесты из-за сложных зависимостей")   
       @TutorialReference(tutorial: "doc:tutorials/Network")
    }
}
